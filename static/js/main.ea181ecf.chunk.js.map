{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","class","type","id","key","value","text","onChange","e","setUpdate","target","onClick","deleteItem","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","role","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAqCeA,MAlCf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GACxB,OACE,qBAAKC,MAAM,sBAAX,SACE,oBAAIA,MAAM,8BAAV,SACE,oBAAIA,MAAM,kBAAV,SACE,sBAAKA,MAAM,UAAX,UACE,uBACEC,KAAK,OACLD,MAAM,6BACNE,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SAAU,SAACC,GACTZ,EAAMa,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAGvC,wBACEF,KAAK,SACLD,MAAM,oCACNU,QAAS,kBAAMf,EAAMgB,WAAWZ,EAAKI,MAHvC,gCAahB,OACI,8BAAMP,KCiECgB,G,wDA3Fb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXhB,MAAO,GACPiB,YAAa,CACXT,KAAM,GACNF,IAAK,KAGT,EAAKY,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKL,WAAa,EAAKA,WAAWK,KAAhB,gBAClB,EAAKR,UAAY,EAAKA,UAAUQ,KAAf,gBAZA,E,wDAePT,GACVW,KAAKC,SAAS,CACZL,YAAa,CACXT,KAAME,EAAEE,OAAOL,MACfD,IAAKiB,KAAKC,W,8BAKRd,GACNA,EAAEe,iBAEF,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACM,KAAfA,EAAQlB,KAAU,CAEnB,IAAMqB,EAAS,GAAD,mBAAKR,KAAKL,MAAMhB,OAAhB,CAAuB0B,IACrCL,KAAKC,SAAS,CAEZtB,MAAM6B,EACNZ,YAAY,CACVT,KAAK,GACLF,IAAI,S,iCAMDA,GACT,IAAMwB,EAAgBT,KAAKL,MAAMhB,MAAM+B,QAAO,SAAA7B,GAAI,OAAIA,EAAKI,MAAMA,KACjEe,KAAKC,SAAS,CACZtB,MAAM8B,M,gCAIAtB,EAAKF,GACb,IAAMN,EAAQqB,KAAKL,MAAMhB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGda,KAAKC,SAAS,CACZtB,MAAOA,M,+BAKT,OACE,sBAAKG,MAAM,YAAX,UACE,qBAAKA,MAAM,qBAAqB6B,KAAK,QAArC,iDAGA,4CACA,uBAAM7B,MAAM,UAAU8B,SAAUZ,KAAKD,QAArC,UACE,qBAAKjB,MAAM,WAAX,SACE,uBACEC,KAAK,OACLD,MAAM,eACN+B,YAAY,aACZ3B,MAAOc,KAAKL,MAAMC,YAAYT,KAC9BC,SAAUY,KAAKH,gBAGnB,qBAAKf,MAAM,WAAX,SACE,wBAAQC,KAAK,SAASD,MAAM,uBAA5B,sBAKJ,cAAC,EAAD,CAAWH,MAASqB,KAAKL,MAAMhB,MAAOc,WAAcO,KAAKP,WAAYH,UAAWU,KAAKV,mB,GAtF3EwB,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ea181ecf.chunk.js","sourcesContent":["import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction ListItems(props){\n    const items = props.items;\n    const listItems = items.map(item => {\n        return (\n          <div class=\"card key={item.key}\">\n            <ul class=\"list-group list-group-flush\">\n              <li class=\"list-group-item\">\n                <div class=\"row g-5\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control-plaintext col\"\n                    id={item.key}\n                    value={item.text}\n                    onChange={(e) => {\n                      props.setUpdate(e.target.value, item.key);\n                    }}\n                  />\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-danger btn-sm float-right\"\n                      onClick={() => props.deleteItem(item.key)}\n                    >\n                      Delete\n                    </button>\n                </div>\n              </li>\n            </ul>\n          </div>\n        );\n    })\n    return(\n        <div>{listItems}</div>\n    )\n}\nexport default ListItems;","import React from 'react';\nimport ListItems from './ListItems';\nimport './App.css';\nimport { Button, Alert } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentItem: {\n        text: \"\",\n        key: \"\",\n      },\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      currentItem: {\n        text: e.target.value,\n        key: Date.now(),\n      },\n    });\n  }\n\n  addItem(e) {\n    e.preventDefault();\n    //we defined a new item here\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text!==\"\"){\n      //we defined another variable newItems here\n      const newItems=[...this.state.items, newItem];\n      this.setState({\n        //should that be an array why didn't we use =\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => item.key!==key);\n    this.setState({\n      items:filteredItems\n    })\n  }\n\n  setUpdate(text,key){\n    const items = this.state.items;\n    items.map(item => {\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  render() {\n    return (\n      <div class=\"container\">\n        <div class=\"alert alert-danger\" role=\"alert\">\n          Go away, I wanna be alone and sad!!\n        </div>\n        <h1>To-do list</h1>\n        <form class=\"row g-3\" onSubmit={this.addItem}>\n          <div class=\"col-auto\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"Enter task\"\n              value={this.state.currentItem.text}\n              onChange={this.handleInput}\n            />\n          </div>\n          <div class=\"col-auto\">\n            <button type=\"submit\" class=\"btn btn-primary mb-3\">\n              Add\n            </button>\n          </div>\n        </form>\n        <ListItems items = {this.state.items} deleteItem = {this.deleteItem} setUpdate={this.setUpdate}></ListItems>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}